{
  "contractName": "EthieTokenMetadata",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is basically a clone of OpenZeppelin ERC721Metadata with small modifications, to generate tokenURI on the fly instead of using a mapping\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._\"},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * Reverts if the token ID does not exist.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/ethie/EthieTokenMetadata.sol\":\"EthieTokenMetadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/ethie/EthieTokenMetadata.sol\":{\"keccak256\":\"0x0f95f2bdd92ae29ecb864a02d11672faf08453af005ede4e6b31f079782a204d\",\"urls\":[\"bzz-raw://3ccdc7551d2b2bc1b8b1089a98a6a4d3ad6c095449c13c1e3ff20f02b52f0292\",\"dweb:/ipfs/QmNQbEfkw7LREyxQd46enmjJ8xDZ6cUkXNYvouY1cCUqym\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/StringUtils.sol\":{\"keccak256\":\"0xb81a6ddb51dfb8be65c3a20552a524d82cb6f07d4dd4d1bfd09b29f927d3df08\",\"urls\":[\"bzz-raw://802f952b4e3f71d8c80b474a1debf9bebb3e5035dd748ff2aa7aed7860805f16\",\"dweb:/ipfs/QmS9zcdNyJifmqqeWqFGss1KtF7B3865VNodiXsyuUcDiJ\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1a1c02bc2487c763ad240f6b6440ec9dcb84870879aea3ed2a6b9cd300b637c7\",\"urls\":[\"bzz-raw://e6351696020fecf1c1b09437a2961cbdc3e1579238a9573b8577b58af463eeb6\",\"dweb:/ipfs/QmTg7UxUcuENko38JL2Pb2aqXkWgqW1xPDbJwmfo3RVrrV\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzz-raw://a8024c00e34efaf328f9592e76823c79f25fa0f6006bdf4a1e7fea204afd4773\",\"dweb:/ipfs/QmZns9jTr7843njq3J2iL2LLoWXK5mdzN1bDGd9GL3ahhD\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620019e4380380620019e4833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405250620001bc91506301ffc9a760e01b90506001600160e01b036200022616565b620001d76380ac58cd60e01b6001600160e01b036200022616565b8151620001ec906005906020850190620002ab565b50805162000202906006906020840190620002ab565b506200021e635b5e139f60e01b6001600160e01b036200022616565b505062000350565b6001600160e01b0319808216141562000286576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002ee57805160ff19168380011785556200031e565b828001600101855582156200031e579182015b828111156200031e57825182559160200191906001019062000301565b506200032c92915062000330565b5090565b6200034d91905b808211156200032c576000815560010162000337565b90565b61168480620003606000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636c0360eb11610097578063b88d4fde11610066578063b88d4fde14610318578063c87b56dd146103de578063e8a3d485146103fb578063e985e9c514610403576100f5565b80636c0360eb146102a257806370a08231146102aa57806395d89b41146102e2578063a22cb465146102ea576100f5565b8063095ea7b3116100d3578063095ea7b3146101eb57806323b872dd1461021957806342842e0e1461024f5780636352211e14610285576100f5565b806301ffc9a7146100fa57806306fdde0314610135578063081812fc146101b2575b600080fd5b6101216004803603602081101561011057600080fd5b50356001600160e01b031916610431565b604080519115158252519081900360200190f35b61013d610454565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017757818101518382015260200161015f565b50505050905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360208110156101c857600080fd5b50356104ea565b604080516001600160a01b039092168252519081900360200190f35b6102176004803603604081101561020157600080fd5b506001600160a01b03813516906020013561054c565b005b6102176004803603606081101561022f57600080fd5b506001600160a01b03813581169160208101359091169060400135610674565b6102176004803603606081101561026557600080fd5b506001600160a01b038135811691602081013590911690604001356106d0565b6101cf6004803603602081101561029b57600080fd5b50356106eb565b61013d610745565b6102d0600480360360208110156102c057600080fd5b50356001600160a01b03166107a6565b60408051918252519081900360200190f35b61013d61080e565b6102176004803603604081101561030057600080fd5b506001600160a01b038135169060200135151561086f565b6102176004803603608081101561032e57600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561036957600080fd5b82018360208201111561037b57600080fd5b8035906020019184600183028401116401000000008311171561039d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610974945050505050565b61013d600480360360208110156103f457600080fd5b50356109d2565b61013d610adb565b6101216004803603604081101561041957600080fd5b506001600160a01b0381358116916020013516610ba5565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e05780601f106104b5576101008083540402835291602001916104e0565b820191906000526020600020905b8154815290600101906020018083116104c357829003601f168201915b5050505050905090565b60006104f582610bd3565b6105305760405162461bcd60e51b815260040180806020018281038252602c8152602001806115a9602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b6000610557826106eb565b9050806001600160a01b0316836001600160a01b031614156105aa5760405162461bcd60e51b81526004018080602001828103825260218152602001806115fe6021913960400191505060405180910390fd5b806001600160a01b03166105bc610bf0565b6001600160a01b031614806105dd57506105dd816105d8610bf0565b610ba5565b6106185760405162461bcd60e51b815260040180806020018281038252603881526020018061151e6038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61068561067f610bf0565b82610bf4565b6106c05760405162461bcd60e51b815260040180806020018281038252603181526020018061161f6031913960400191505060405180910390fd5b6106cb838383610c98565b505050565b6106cb83838360405180602001604052806000815250610974565b6000818152600160205260408120546001600160a01b03168061073f5760405162461bcd60e51b81526004018080602001828103825260298152602001806115806029913960400191505060405180910390fd5b92915050565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e05780601f106104b5576101008083540402835291602001916104e0565b60006001600160a01b0382166107ed5760405162461bcd60e51b815260040180806020018281038252602a815260200180611556602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061073f90610ddc565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e05780601f106104b5576101008083540402835291602001916104e0565b610877610bf0565b6001600160a01b0316826001600160a01b031614156108dd576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80600460006108ea610bf0565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561092e610bf0565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b61098561097f610bf0565b83610bf4565b6109c05760405162461bcd60e51b815260040180806020018281038252603181526020018061161f6031913960400191505060405180910390fd5b6109cc84848484610de0565b50505050565b60606109dd82610bd3565b610a185760405162461bcd60e51b81526004018080602001828103825260338152602001806114eb6033913960400191505060405180910390fd5b61073f610a2483610e32565b6040805180820182526005815264173539b7b760d91b60208083019190915260078054845160026001831615610100026000190190921691909104601f810184900484028201840190955284815292939091830182828015610ac75780601f10610a9c57610100808354040283529160200191610ac7565b820191906000526020600020905b815481529060010190602001808311610aaa57829003601f168201915b5050505050610ef69092919063ffffffff16565b604080518082018252600d81526c31b7b73a3930b1ba173539b7b760991b60208083019190915260078054845160026001831615610100026000190190921691909104601f8101849004840282018401909552848152606094610ba09493919291830182828015610b8d5780601f10610b6257610100808354040283529160200191610b8d565b820191906000526020600020905b815481529060010190602001808311610b7057829003601f168201915b5050505050610ffc90919063ffffffff16565b905090565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b6000610bff82610bd3565b610c3a5760405162461bcd60e51b815260040180806020018281038252602c8152602001806114bf602c913960400191505060405180910390fd5b6000610c45836106eb565b9050806001600160a01b0316846001600160a01b03161480610c805750836001600160a01b0316610c75846104ea565b6001600160a01b0316145b80610c905750610c908185610ba5565b949350505050565b826001600160a01b0316610cab826106eb565b6001600160a01b031614610cf05760405162461bcd60e51b81526004018080602001828103825260298152602001806115d56029913960400191505060405180910390fd5b6001600160a01b038216610d355760405162461bcd60e51b815260040180806020018281038252602481526020018061149b6024913960400191505060405180910390fd5b610d3e816110b7565b6001600160a01b0383166000908152600360205260409020610d5f906110f4565b6001600160a01b0382166000908152600360205260409020610d809061110b565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b5490565b610deb848484610c98565b610df784848484611114565b6109cc5760405162461bcd60e51b81526004018080602001828103825260328152602001806114696032913960400191505060405180910390fd5b606081610e5757506040805180820190915260018152600360fc1b602082015261044f565b8160005b8115610e6f57600101600a82049150610e5b565b6060816040519080825280601f01601f191660200182016040528015610e9c576020820181803883390190505b50859350905060001982015b8315610eed57600a840660300160f81b82828060019003935081518110610ecb57fe5b60200101906001600160f81b031916908160001a905350600a84049350610ea8565b50949350505050565b60608383836040516020018084805190602001908083835b60208310610f2d5780518252601f199092019160209182019101610f0e565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310610f755780518252601f199092019160209182019101610f56565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610fbd5780518252601f199092019160209182019101610f9e565b6001836020036101000a038019825116818451168082178552505050505050905001935050505060405160208183030381529060405290509392505050565b606082826040516020018083805190602001908083835b602083106110325780518252601f199092019160209182019101611013565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b6020831061107a5780518252601f19909201916020918201910161105b565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b6000818152600260205260409020546001600160a01b0316156110f157600081815260026020526040902080546001600160a01b03191690555b50565b805461110790600163ffffffff61134f16565b9055565b80546001019055565b6000611128846001600160a01b0316611398565b61113457506001610c90565b600060606001600160a01b038616630a85bd0160e11b611152610bf0565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111cb5781810151838201526020016111b3565b50505050905090810190601f1680156111f85780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106112605780518252601f199092019160209182019101611241565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146112c2576040519150601f19603f3d011682016040523d82523d6000602084013e6112c7565b606091505b509150915081611318578051156112e15780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806114696032913960400191505060405180910390fd5b600081806020019051602081101561132f57600080fd5b50516001600160e01b031916630a85bd0160e11b149350610c9092505050565b600061139183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113d1565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610c90575050151592915050565b600081848411156114605760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561142557818101518382015260200161140d565b50505050905090810190601f1680156114525780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4574686965546f6b656e4d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a265627a7a72315820c418f052ab64deb8487f3625d39ff33a65f1cb96d5a0dc93002fc1171c2cc75264736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80636c0360eb11610097578063b88d4fde11610066578063b88d4fde14610318578063c87b56dd146103de578063e8a3d485146103fb578063e985e9c514610403576100f5565b80636c0360eb146102a257806370a08231146102aa57806395d89b41146102e2578063a22cb465146102ea576100f5565b8063095ea7b3116100d3578063095ea7b3146101eb57806323b872dd1461021957806342842e0e1461024f5780636352211e14610285576100f5565b806301ffc9a7146100fa57806306fdde0314610135578063081812fc146101b2575b600080fd5b6101216004803603602081101561011057600080fd5b50356001600160e01b031916610431565b604080519115158252519081900360200190f35b61013d610454565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017757818101518382015260200161015f565b50505050905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360208110156101c857600080fd5b50356104ea565b604080516001600160a01b039092168252519081900360200190f35b6102176004803603604081101561020157600080fd5b506001600160a01b03813516906020013561054c565b005b6102176004803603606081101561022f57600080fd5b506001600160a01b03813581169160208101359091169060400135610674565b6102176004803603606081101561026557600080fd5b506001600160a01b038135811691602081013590911690604001356106d0565b6101cf6004803603602081101561029b57600080fd5b50356106eb565b61013d610745565b6102d0600480360360208110156102c057600080fd5b50356001600160a01b03166107a6565b60408051918252519081900360200190f35b61013d61080e565b6102176004803603604081101561030057600080fd5b506001600160a01b038135169060200135151561086f565b6102176004803603608081101561032e57600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561036957600080fd5b82018360208201111561037b57600080fd5b8035906020019184600183028401116401000000008311171561039d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610974945050505050565b61013d600480360360208110156103f457600080fd5b50356109d2565b61013d610adb565b6101216004803603604081101561041957600080fd5b506001600160a01b0381358116916020013516610ba5565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e05780601f106104b5576101008083540402835291602001916104e0565b820191906000526020600020905b8154815290600101906020018083116104c357829003601f168201915b5050505050905090565b60006104f582610bd3565b6105305760405162461bcd60e51b815260040180806020018281038252602c8152602001806115a9602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b6000610557826106eb565b9050806001600160a01b0316836001600160a01b031614156105aa5760405162461bcd60e51b81526004018080602001828103825260218152602001806115fe6021913960400191505060405180910390fd5b806001600160a01b03166105bc610bf0565b6001600160a01b031614806105dd57506105dd816105d8610bf0565b610ba5565b6106185760405162461bcd60e51b815260040180806020018281038252603881526020018061151e6038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61068561067f610bf0565b82610bf4565b6106c05760405162461bcd60e51b815260040180806020018281038252603181526020018061161f6031913960400191505060405180910390fd5b6106cb838383610c98565b505050565b6106cb83838360405180602001604052806000815250610974565b6000818152600160205260408120546001600160a01b03168061073f5760405162461bcd60e51b81526004018080602001828103825260298152602001806115806029913960400191505060405180910390fd5b92915050565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e05780601f106104b5576101008083540402835291602001916104e0565b60006001600160a01b0382166107ed5760405162461bcd60e51b815260040180806020018281038252602a815260200180611556602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061073f90610ddc565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e05780601f106104b5576101008083540402835291602001916104e0565b610877610bf0565b6001600160a01b0316826001600160a01b031614156108dd576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80600460006108ea610bf0565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561092e610bf0565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b61098561097f610bf0565b83610bf4565b6109c05760405162461bcd60e51b815260040180806020018281038252603181526020018061161f6031913960400191505060405180910390fd5b6109cc84848484610de0565b50505050565b60606109dd82610bd3565b610a185760405162461bcd60e51b81526004018080602001828103825260338152602001806114eb6033913960400191505060405180910390fd5b61073f610a2483610e32565b6040805180820182526005815264173539b7b760d91b60208083019190915260078054845160026001831615610100026000190190921691909104601f810184900484028201840190955284815292939091830182828015610ac75780601f10610a9c57610100808354040283529160200191610ac7565b820191906000526020600020905b815481529060010190602001808311610aaa57829003601f168201915b5050505050610ef69092919063ffffffff16565b604080518082018252600d81526c31b7b73a3930b1ba173539b7b760991b60208083019190915260078054845160026001831615610100026000190190921691909104601f8101849004840282018401909552848152606094610ba09493919291830182828015610b8d5780601f10610b6257610100808354040283529160200191610b8d565b820191906000526020600020905b815481529060010190602001808311610b7057829003601f168201915b5050505050610ffc90919063ffffffff16565b905090565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b6000610bff82610bd3565b610c3a5760405162461bcd60e51b815260040180806020018281038252602c8152602001806114bf602c913960400191505060405180910390fd5b6000610c45836106eb565b9050806001600160a01b0316846001600160a01b03161480610c805750836001600160a01b0316610c75846104ea565b6001600160a01b0316145b80610c905750610c908185610ba5565b949350505050565b826001600160a01b0316610cab826106eb565b6001600160a01b031614610cf05760405162461bcd60e51b81526004018080602001828103825260298152602001806115d56029913960400191505060405180910390fd5b6001600160a01b038216610d355760405162461bcd60e51b815260040180806020018281038252602481526020018061149b6024913960400191505060405180910390fd5b610d3e816110b7565b6001600160a01b0383166000908152600360205260409020610d5f906110f4565b6001600160a01b0382166000908152600360205260409020610d809061110b565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b5490565b610deb848484610c98565b610df784848484611114565b6109cc5760405162461bcd60e51b81526004018080602001828103825260328152602001806114696032913960400191505060405180910390fd5b606081610e5757506040805180820190915260018152600360fc1b602082015261044f565b8160005b8115610e6f57600101600a82049150610e5b565b6060816040519080825280601f01601f191660200182016040528015610e9c576020820181803883390190505b50859350905060001982015b8315610eed57600a840660300160f81b82828060019003935081518110610ecb57fe5b60200101906001600160f81b031916908160001a905350600a84049350610ea8565b50949350505050565b60608383836040516020018084805190602001908083835b60208310610f2d5780518252601f199092019160209182019101610f0e565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310610f755780518252601f199092019160209182019101610f56565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610fbd5780518252601f199092019160209182019101610f9e565b6001836020036101000a038019825116818451168082178552505050505050905001935050505060405160208183030381529060405290509392505050565b606082826040516020018083805190602001908083835b602083106110325780518252601f199092019160209182019101611013565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b6020831061107a5780518252601f19909201916020918201910161105b565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b6000818152600260205260409020546001600160a01b0316156110f157600081815260026020526040902080546001600160a01b03191690555b50565b805461110790600163ffffffff61134f16565b9055565b80546001019055565b6000611128846001600160a01b0316611398565b61113457506001610c90565b600060606001600160a01b038616630a85bd0160e11b611152610bf0565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111cb5781810151838201526020016111b3565b50505050905090810190601f1680156111f85780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106112605780518252601f199092019160209182019101611241565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146112c2576040519150601f19603f3d011682016040523d82523d6000602084013e6112c7565b606091505b509150915081611318578051156112e15780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806114696032913960400191505060405180910390fd5b600081806020019051602081101561132f57600080fd5b50516001600160e01b031916630a85bd0160e11b149350610c9092505050565b600061139183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113d1565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610c90575050151592915050565b600081848411156114605760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561142557818101518382015260200161140d565b50505050905090810190601f1680156114525780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4574686965546f6b656e4d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a265627a7a72315820c418f052ab64deb8487f3625d39ff33a65f1cb96d5a0dc93002fc1171c2cc75264736f6c63430005110032",
  "sourceMap": "474:2441:20:-;;;1143:254;8:9:-1;5:2;;;30:1;27;20:12;5:2;1143:254:20;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1143:254:20;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1143:254:20;;420:4:-1;411:14;;;;1143:254:20;;;;;411:14:-1;1143:254:20;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1143:254:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1143:254:20;;420:4:-1;411:14;;;;1143:254:20;;;;;411:14:-1;1143:254:20;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1143:254:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1143:254:20;;-1:-1:-1;718:40:46;;-1:-1:-1;;;;737:20:46;-1:-1:-1;;;;;;718:18:46;:40;:::i;:::-;2262::50;-1:-1:-1;;;;;;;;2262:18:50;:40;:::i;:::-;1215:12:20;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1237:16:20;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1341:49:20;-1:-1:-1;;;;;;;;1341:18:20;:49;:::i;:::-;1143:254;;474:2441;;1442:190:46;-1:-1:-1;;;;;;1517:25:46;;;;;1509:66;;;;;-1:-1:-1;;;1509:66:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1585:33:46;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1585:40:46;1621:4;1585:40;;;1442:190::o;474:2441:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;474:2441:20;;;-1:-1:-1;474:2441:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "474:2441:20:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;474:2441:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;915:133:46;-1:-1:-1;;;;;;915:133:46;;:::i;:::-;;;;;;;;;;;;;;;;;;1502:83:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1502:83:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4283:200:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4283:200:50;;:::i;:::-;;;;-1:-1:-1;;;;;4283:200:50;;;;;;;;;;;;;;3583:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3583:415:50;;;;;;;;:::i;:::-;;5929:287;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5929:287:50;;;;;;;;;;;;;;;;;:::i;6865:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6865:132:50;;;;;;;;;;;;;;;;;:::i;2939:223::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2939:223:50;;:::i;2823:89:20:-;;;:::i;2513:207:50:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2513:207:50;-1:-1:-1;;;;;2513:207:50;;:::i;:::-;;;;;;;;;;;;;;;;1694:87:20;;;:::i;4776:249:50:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4776:249:50;;;;;;;;;;:::i;7720:269::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7720:269:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7720:269:50;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7720:269:50;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7720:269:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7720:269:50;;-1:-1:-1;7720:269:50;;-1:-1:-1;;;;;7720:269:50:i;1935:234:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1935:234:20;;:::i;2175:115::-;;;:::i;5347:145:50:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5347:145:50;;;;;;;;;;:::i;915:133:46:-;-1:-1:-1;;;;;;1008:33:46;;985:4;1008:33;;;;;;;;;;;;;915:133;;;;:::o;1502:83:20:-;1573:5;1566:12;;;;;;;;-1:-1:-1;;1566:12:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:13;;1566:12;;1573:5;;1566:12;;1573:5;1566:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:83;:::o;4283:200:50:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;-1:-1:-1;;;4361:73:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4452:24:50;;;;:15;:24;;;;;;-1:-1:-1;;;;;4452:24:50;;4283:200::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;-1:-1:-1;;;;;3696:11:50;:2;-1:-1:-1;;;;;3696:11:50;;;3688:57;;;;-1:-1:-1;;;3688:57:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3780:5;-1:-1:-1;;;;;3764:21:50;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3764:21:50;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3756:152;;;;-1:-1:-1;;;3756:152:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3919:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3919:29:50;-1:-1:-1;;;;;3919:29:50;;;;;;;;;3963:28;;3919:24;;3963:28;;;;;;;3583:415;;;:::o;5929:287::-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;-1:-1:-1;;;6063:103:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;6865:132::-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;2939:223::-;2994:7;3029:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3029:20:50;3067:19;3059:73;;;;-1:-1:-1;;;3059:73:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:5;2939:223;-1:-1:-1;;2939:223:50:o;2823:89:20:-;2897:8;2890:15;;;;;;;;-1:-1:-1;;2890:15:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2865:13;;2890:15;;2897:8;;2890:15;;2897:8;2890:15;;;;;;;;;;;;;;;;;;;;;;;;2513:207:50;2568:7;-1:-1:-1;;;;;2595:19:50;;2587:74;;;;-1:-1:-1;;;2587:74:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2679:24:50;;;;;;:17;:24;;;;;:34;;:32;:34::i;1694:87:20:-;1767:7;1760:14;;;;;;;;-1:-1:-1;;1760:14:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1735:13;;1760:14;;1767:7;;1760:14;;1767:7;1760:14;;;;;;;;;;;;;;;;;;;;;;;;4776:249:50;4861:12;:10;:12::i;:::-;-1:-1:-1;;;;;4855:18:50;:2;-1:-1:-1;;;;;4855:18:50;;;4847:56;;;;;-1:-1:-1;;;4847:56:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;-1:-1:-1;;;;;4914:32:50;;;;;;;;;;;;;;;;;-1:-1:-1;4914:32:50;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;4914:47:50;;;;;;;;;;;4991:12;:10;:12::i;:::-;4976:42;;;;;;;;;;-1:-1:-1;;;;;4976:42:50;;;;;;;;;;;;;;4776:249;;:::o;7720:269::-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;-1:-1:-1;;;7826:103:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;1935:234:20:-;1993:13;2026:16;2034:7;2026;:16::i;:::-;2018:80;;;;-1:-1:-1;;;2018:80:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2115:47;2131:21;:7;:19;:21::i;:::-;2115:47;;;;;;;;;;;-1:-1:-1;;;2115:47:20;;;;;;;;:8;:15;;;;;;;;;;;-1:-1:-1;;2115:15:20;;;;;;;;;;;;;;;;;;;;;;;;;;:47;;:8;;:15;;:8;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:47;;;;;:::i;2175:115::-;2251:32;;;;;;;;;;;-1:-1:-1;;;2251:32:20;;;;;;;;:8;:15;;;;;;;;;;;-1:-1:-1;;2251:15:20;;;;;;;;;;;;;;;;;;;;;;;;;;2219:13;;2251:32;;;:15;;:8;:15;;:8;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;2244:39;;2175:115;:::o;5347:145:50:-;-1:-1:-1;;;;;5450:25:50;;;5427:4;5450:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5347:145::o;9158:152::-;9215:4;9247:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9247:20:50;9284:19;;;9158:152::o;788:96:40:-;867:10;788:96;:::o;9671:329:50:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;-1:-1:-1;;;9772:73:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;-1:-1:-1;;;;;9905:16:50;:7;-1:-1:-1;;;;;9905:16:50;;:51;;;;9949:7;-1:-1:-1;;;;;9925:31:50;:20;9937:7;9925:11;:20::i;:::-;-1:-1:-1;;;;;9925:31:50;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9897:96;9671:329;-1:-1:-1;;;;9671:329:50:o;13281:447::-;13394:4;-1:-1:-1;;;;;13374:24:50;:16;13382:7;13374;:16::i;:::-;-1:-1:-1;;;;;13374:24:50;;13366:78;;;;-1:-1:-1;;;13366:78:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13462:16:50;;13454:65;;;;-1:-1:-1;;;13454:65:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;-1:-1:-1;;;;;13564:23:50;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13609:21:50;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13653:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13653:25:50;-1:-1:-1;;;;;13653:25:50;;;;;;;;;13694:27;;13653:20;;13694:27;;;;;;;13281:447;;;:::o;1065:112:44:-;1156:14;;1065:112::o;8694:269:50:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;-1:-1:-1;;;8845:111:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:538:39;677:13;706:10;702:51;;-1:-1:-1;732:10:39;;;;;;;;;;;;-1:-1:-1;;;732:10:39;;;;;;702:51;777:5;762:12;816:75;823:9;;816:75;;848:8;;878:2;870:10;;;;816:75;;;900:19;932:6;922:17;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;922:17:39;87:34:-1;135:17;;-1:-1;922:17:39;-1:-1:-1;992:5:39;;-1:-1:-1;900:39:39;-1:-1:-1;;;965:10:39;;1007:112;1014:9;;1007:112;;1080:2;1073:4;:9;1068:2;:14;1057:27;;1039:6;1046:7;;;;;;;1039:15;;;;;;;;;;;:45;-1:-1:-1;;;;;1039:45:39;;;;;;;;-1:-1:-1;1106:2:39;1098:10;;;;1007:112;;;-1:-1:-1;1142:6:39;618:538;-1:-1:-1;;;;618:538:39:o;447:161::-;536:13;592:1;595;598;575:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;575:25:39;;;;;;;;;;-1:-1:-1;575:25:39;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;575:25:39;;;;;;;;;;-1:-1:-1;575:25:39;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;575:25:39;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;575:25:39;;;561:40;;447:161;;;;;:::o;301:141::-;373:13;429:1;432;412:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;412:22:39;;;;;;;;;;-1:-1:-1;412:22:39;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;412:22:39;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;412:22:39;;;398:37;;301:141;;;;:::o;15580:171:50:-;15679:1;15643:24;;;:15;:24;;;;;;-1:-1:-1;;;;;15643:24:50;:38;15639:106;;15732:1;15697:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;15697:37:50;;;15639:106;15580:171;:::o;1367:108:44:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;14367:1051:50:-;14488:4;14513:15;:2;-1:-1:-1;;;;;14513:13:50;;:15::i;:::-;14508:58;;-1:-1:-1;14551:4:50;14544:11;;14508:58;14635:12;14649:23;-1:-1:-1;;;;;14676:7:50;;-1:-1:-1;;;14779:12:50;:10;:12::i;:::-;14805:4;14823:7;14844:5;14684:175;;;;;;-1:-1:-1;;;;;14684:175:50;-1:-1:-1;;;;;14684:175:50;;;;;;-1:-1:-1;;;;;14684:175:50;-1:-1:-1;;;;;14684:175:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14684:175:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14684:175:50;;;-1:-1:-1;;26:21;;;22:32;6:49;;14684:175:50;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;14684:175:50;;;179:29:-1;;;;160:49;;14676:184:50;;;14684:175;;14676:184;;-1:-1:-1;14676:184:50;;-1:-1:-1;25:18;-1:-1;14676:184:50;-1:-1:-1;14676:184:50;;-1:-1:-1;14676:184:50;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14676:184:50;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14634:226:50;;;;14875:7;14870:542;;14902:17;;:21;14898:376;;15067:10;15061:17;15127:15;15114:10;15110:2;15106:19;15099:44;15016:145;15199:60;;-1:-1:-1;;;15199:60:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14870:542;15304:13;15331:10;15320:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15320:32:50;-1:-1:-1;;;;;;15374:26:50;-1:-1:-1;;;15374:26:50;;-1:-1:-1;15366:35:50;;-1:-1:-1;;;15366:35:50;1274:134:49;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:49:o;686:610:64:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:64;;;1238:51;-1:-1:-1;;686:610:64:o;1732:187:49:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:49;;;1732:187::o",
  "source": "pragma solidity ^0.5.5;\n\nimport \"../libs/openzeppelin_v2_5_0/GSN/Context.sol\";\nimport \"../libs/openzeppelin_v2_5_0/token/ERC721/ERC721.sol\";\nimport \"../libs/openzeppelin_v2_5_0/token/ERC721/IERC721Metadata.sol\";\nimport \"../libs/openzeppelin_v2_5_0/introspection/ERC165.sol\";\nimport \"../libs/StringUtils.sol\";\n\n/**\n * @dev This is basically a clone of OpenZeppelin ERC721Metadata\n * with small modifications, to generate tokenURI on the fly\n * instead of using a mapping\n */\ncontract EthieTokenMetadata is Context, ERC165, ERC721, IERC721Metadata {\n    using StringUtils for string;\n    using StringUtils for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Base URI\n    string private _baseURI;\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the URI for a given token ID. May return an empty string.\n     *\n     * Reverts if the token ID does not exist.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory) {\n        require(_exists(tokenId), \"EthieTokenMetadata: URI query for nonexistent token\");\n        return _baseURI.concat(tokenId.fromUint256(), \".json\");\n    }\n\n    function contractURI() public view returns (string memory) {\n        return _baseURI.concat(\"contract.json\");\n    }\n\n    /**\n     * @dev Internal function to set the base URI for all token IDs. It is\n     * automatically added as a prefix to the value returned in {tokenURI}.\n     *\n     * _Available since v2.5.0._\n     */\n    function _setBaseURI(string memory baseURI) internal {\n        _baseURI = baseURI;\n    }\n\n    /**\n    * @dev Returns the base URI set via {_setBaseURI}. This will be\n    * automatically added as a preffix in {tokenURI} to each token's URI, when\n    * they are non-empty.\n    *\n    * _Available since v2.5.0._\n    */\n    function baseURI() external view returns (string memory) {\n        return _baseURI;\n    }\n\n}\n",
  "sourcePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/ethie/EthieTokenMetadata.sol",
  "ast": {
    "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/ethie/EthieTokenMetadata.sol",
    "exportedSymbols": {
      "EthieTokenMetadata": [
        6529
      ]
    },
    "id": 6530,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6412,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/GSN/Context.sol",
        "file": "../libs/openzeppelin_v2_5_0/GSN/Context.sol",
        "id": 6413,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 10210,
        "src": "25:53:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/token/ERC721/ERC721.sol",
        "file": "../libs/openzeppelin_v2_5_0/token/ERC721/ERC721.sol",
        "id": 6414,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 11644,
        "src": "79:61:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/token/ERC721/IERC721Metadata.sol",
        "file": "../libs/openzeppelin_v2_5_0/token/ERC721/IERC721Metadata.sol",
        "id": 6415,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 12567,
        "src": "141:70:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/introspection/ERC165.sol",
        "file": "../libs/openzeppelin_v2_5_0/introspection/ERC165.sol",
        "id": 6416,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 10688,
        "src": "212:62:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/StringUtils.sol",
        "file": "../libs/StringUtils.sol",
        "id": 6417,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 10183,
        "src": "275:33:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6418,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10209,
              "src": "505:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$10209",
                "typeString": "contract Context"
              }
            },
            "id": 6419,
            "nodeType": "InheritanceSpecifier",
            "src": "505:7:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6420,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10687,
              "src": "514:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$10687",
                "typeString": "contract ERC165"
              }
            },
            "id": 6421,
            "nodeType": "InheritanceSpecifier",
            "src": "514:6:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6422,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11643,
              "src": "522:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$11643",
                "typeString": "contract ERC721"
              }
            },
            "id": 6423,
            "nodeType": "InheritanceSpecifier",
            "src": "522:6:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6424,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12566,
              "src": "530:15:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$12566",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 6425,
            "nodeType": "InheritanceSpecifier",
            "src": "530:15:20"
          }
        ],
        "contractDependencies": [
          10209,
          10687,
          10697,
          11643,
          12504,
          12566
        ],
        "contractKind": "contract",
        "documentation": "@dev This is basically a clone of OpenZeppelin ERC721Metadata\nwith small modifications, to generate tokenURI on the fly\ninstead of using a mapping",
        "fullyImplemented": true,
        "id": 6529,
        "linearizedBaseContracts": [
          6529,
          12566,
          11643,
          12504,
          10687,
          10697,
          10209
        ],
        "name": "EthieTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6428,
            "libraryName": {
              "contractScope": null,
              "id": 6426,
              "name": "StringUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10182,
              "src": "558:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StringUtils_$10182",
                "typeString": "library StringUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "552:29:20",
            "typeName": {
              "id": 6427,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "574:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "id": 6431,
            "libraryName": {
              "contractScope": null,
              "id": 6429,
              "name": "StringUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10182,
              "src": "592:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StringUtils_$10182",
                "typeString": "library StringUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "586:30:20",
            "typeName": {
              "id": 6430,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "608:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 6433,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 6529,
            "src": "640:20:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6432,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "640:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6435,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 6529,
            "src": "687:22:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6434,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "687:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6437,
            "name": "_baseURI",
            "nodeType": "VariableDeclaration",
            "scope": 6529,
            "src": "732:23:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6436,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "732:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 6440,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 6529,
            "src": "1021:66:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 6438,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1021:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 6439,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1077:10:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6459,
              "nodeType": "Block",
              "src": "1205:192:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6447,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6433,
                      "src": "1215:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6448,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6442,
                      "src": "1223:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1215:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6450,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:12:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6451,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6435,
                      "src": "1237:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6452,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6444,
                      "src": "1247:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1237:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6454,
                  "nodeType": "ExpressionStatement",
                  "src": "1237:16:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6456,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6440,
                        "src": "1360:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 6455,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10686,
                      "src": "1341:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 6457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6458,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:49:20"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 6460,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6442,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 6460,
                  "src": "1156:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6441,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6444,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 6460,
                  "src": "1176:20:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6443,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1155:42:20"
            },
            "returnParameters": {
              "id": 6446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:0:20"
            },
            "scope": 6529,
            "src": "1143:254:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6467,
              "nodeType": "Block",
              "src": "1556:29:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6465,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6433,
                    "src": "1573:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6464,
                  "id": 6466,
                  "nodeType": "Return",
                  "src": "1566:12:20"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 6468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1515:2:20"
            },
            "returnParameters": {
              "id": 6464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6463,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6468,
                  "src": "1541:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1540:15:20"
            },
            "scope": 6529,
            "src": "1502:83:20",
            "stateMutability": "view",
            "superFunction": 12553,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6475,
              "nodeType": "Block",
              "src": "1750:31:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6473,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6435,
                    "src": "1767:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6472,
                  "id": 6474,
                  "nodeType": "Return",
                  "src": "1760:14:20"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 6476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:2:20"
            },
            "returnParameters": {
              "id": 6472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6471,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6476,
                  "src": "1735:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1734:15:20"
            },
            "scope": 6529,
            "src": "1694:87:20",
            "stateMutability": "view",
            "superFunction": 12558,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6498,
              "nodeType": "Block",
              "src": "2008:161:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6485,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6478,
                            "src": "2034:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6484,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11308,
                          "src": "2026:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 6486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2026:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4574686965546f6b656e4d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 6487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2044:53:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5eb2feccc4b09e6e6e8263bc365bedd1703d1fc78b4c3f4e58ccabdbe5251fbb",
                          "typeString": "literal_string \"EthieTokenMetadata: URI query for nonexistent token\""
                        },
                        "value": "EthieTokenMetadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5eb2feccc4b09e6e6e8263bc365bedd1703d1fc78b4c3f4e58ccabdbe5251fbb",
                          "typeString": "literal_string \"EthieTokenMetadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 6483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38913,
                        38914
                      ],
                      "referencedDeclaration": 38914,
                      "src": "2018:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:80:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6489,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:80:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 6492,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6478,
                            "src": "2131:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUint256",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10010,
                          "src": "2131:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 6494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2131:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "2e6a736f6e",
                        "id": 6495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2154:7:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                          "typeString": "literal_string \".json\""
                        },
                        "value": ".json"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                          "typeString": "literal_string \".json\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6490,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6437,
                        "src": "2115:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 6491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "concat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9931,
                      "src": "2115:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 6496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2115:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 6482,
                  "id": 6497,
                  "nodeType": "Return",
                  "src": "2108:54:20"
                }
              ]
            },
            "documentation": "@dev Returns the URI for a given token ID. May return an empty string.\n     * Reverts if the token ID does not exist.",
            "id": 6499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6478,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6499,
                  "src": "1953:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1952:17:20"
            },
            "returnParameters": {
              "id": 6482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6481,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6499,
                  "src": "1993:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1992:15:20"
            },
            "scope": 6529,
            "src": "1935:234:20",
            "stateMutability": "view",
            "superFunction": 12565,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6509,
              "nodeType": "Block",
              "src": "2234:56:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e74726163742e6a736f6e",
                        "id": 6506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2267:15:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f3ddc30068640d4ff0fc2ae771c732088680d2e64da2ae0c2d4e1168326dad0",
                          "typeString": "literal_string \"contract.json\""
                        },
                        "value": "contract.json"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0f3ddc30068640d4ff0fc2ae771c732088680d2e64da2ae0c2d4e1168326dad0",
                          "typeString": "literal_string \"contract.json\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6504,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6437,
                        "src": "2251:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 6505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "concat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9910,
                      "src": "2251:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 6507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2251:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 6503,
                  "id": 6508,
                  "nodeType": "Return",
                  "src": "2244:39:20"
                }
              ]
            },
            "documentation": null,
            "id": 6510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2195:2:20"
            },
            "returnParameters": {
              "id": 6503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6502,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6510,
                  "src": "2219:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6501,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2219:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2218:15:20"
            },
            "scope": 6529,
            "src": "2175:115:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6519,
              "nodeType": "Block",
              "src": "2556:35:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6515,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6437,
                      "src": "2566:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6516,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6512,
                      "src": "2577:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2566:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6518,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:18:20"
                }
              ]
            },
            "documentation": "@dev Internal function to set the base URI for all token IDs. It is\nautomatically added as a prefix to the value returned in {tokenURI}.\n     * _Available since v2.5.0._",
            "id": 6520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBaseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6512,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 6520,
                  "src": "2524:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6511,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2523:23:20"
            },
            "returnParameters": {
              "id": 6514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2556:0:20"
            },
            "scope": 6529,
            "src": "2503:88:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6527,
              "nodeType": "Block",
              "src": "2880:32:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6525,
                    "name": "_baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6437,
                    "src": "2897:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6524,
                  "id": 6526,
                  "nodeType": "Return",
                  "src": "2890:15:20"
                }
              ]
            },
            "documentation": "@dev Returns the base URI set via {_setBaseURI}. This will be\nautomatically added as a preffix in {tokenURI} to each token's URI, when\nthey are non-empty.\n    * _Available since v2.5.0._",
            "id": 6528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:2:20"
            },
            "returnParameters": {
              "id": 6524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6523,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6528,
                  "src": "2865:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6522,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2865:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2864:15:20"
            },
            "scope": 6529,
            "src": "2823:89:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 6530,
        "src": "474:2441:20"
      }
    ],
    "src": "0:2916:20"
  },
  "legacyAST": {
    "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/ethie/EthieTokenMetadata.sol",
    "exportedSymbols": {
      "EthieTokenMetadata": [
        6529
      ]
    },
    "id": 6530,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6412,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/GSN/Context.sol",
        "file": "../libs/openzeppelin_v2_5_0/GSN/Context.sol",
        "id": 6413,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 10210,
        "src": "25:53:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/token/ERC721/ERC721.sol",
        "file": "../libs/openzeppelin_v2_5_0/token/ERC721/ERC721.sol",
        "id": 6414,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 11644,
        "src": "79:61:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/token/ERC721/IERC721Metadata.sol",
        "file": "../libs/openzeppelin_v2_5_0/token/ERC721/IERC721Metadata.sol",
        "id": 6415,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 12567,
        "src": "141:70:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/openzeppelin_v2_5_0/introspection/ERC165.sol",
        "file": "../libs/openzeppelin_v2_5_0/introspection/ERC165.sol",
        "id": 6416,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 10688,
        "src": "212:62:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ziweizhang/Desktop/kittifight-balancer/contracts/contracts/libs/StringUtils.sol",
        "file": "../libs/StringUtils.sol",
        "id": 6417,
        "nodeType": "ImportDirective",
        "scope": 6530,
        "sourceUnit": 10183,
        "src": "275:33:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6418,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10209,
              "src": "505:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$10209",
                "typeString": "contract Context"
              }
            },
            "id": 6419,
            "nodeType": "InheritanceSpecifier",
            "src": "505:7:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6420,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10687,
              "src": "514:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$10687",
                "typeString": "contract ERC165"
              }
            },
            "id": 6421,
            "nodeType": "InheritanceSpecifier",
            "src": "514:6:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6422,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11643,
              "src": "522:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$11643",
                "typeString": "contract ERC721"
              }
            },
            "id": 6423,
            "nodeType": "InheritanceSpecifier",
            "src": "522:6:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6424,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12566,
              "src": "530:15:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$12566",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 6425,
            "nodeType": "InheritanceSpecifier",
            "src": "530:15:20"
          }
        ],
        "contractDependencies": [
          10209,
          10687,
          10697,
          11643,
          12504,
          12566
        ],
        "contractKind": "contract",
        "documentation": "@dev This is basically a clone of OpenZeppelin ERC721Metadata\nwith small modifications, to generate tokenURI on the fly\ninstead of using a mapping",
        "fullyImplemented": true,
        "id": 6529,
        "linearizedBaseContracts": [
          6529,
          12566,
          11643,
          12504,
          10687,
          10697,
          10209
        ],
        "name": "EthieTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6428,
            "libraryName": {
              "contractScope": null,
              "id": 6426,
              "name": "StringUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10182,
              "src": "558:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StringUtils_$10182",
                "typeString": "library StringUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "552:29:20",
            "typeName": {
              "id": 6427,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "574:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "id": 6431,
            "libraryName": {
              "contractScope": null,
              "id": 6429,
              "name": "StringUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10182,
              "src": "592:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StringUtils_$10182",
                "typeString": "library StringUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "586:30:20",
            "typeName": {
              "id": 6430,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "608:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 6433,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 6529,
            "src": "640:20:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6432,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "640:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6435,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 6529,
            "src": "687:22:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6434,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "687:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6437,
            "name": "_baseURI",
            "nodeType": "VariableDeclaration",
            "scope": 6529,
            "src": "732:23:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6436,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "732:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 6440,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 6529,
            "src": "1021:66:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 6438,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1021:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 6439,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1077:10:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6459,
              "nodeType": "Block",
              "src": "1205:192:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6447,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6433,
                      "src": "1215:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6448,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6442,
                      "src": "1223:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1215:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6450,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:12:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6451,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6435,
                      "src": "1237:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6452,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6444,
                      "src": "1247:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1237:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6454,
                  "nodeType": "ExpressionStatement",
                  "src": "1237:16:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6456,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6440,
                        "src": "1360:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 6455,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10686,
                      "src": "1341:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 6457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6458,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:49:20"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 6460,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6442,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 6460,
                  "src": "1156:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6441,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6444,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 6460,
                  "src": "1176:20:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6443,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1155:42:20"
            },
            "returnParameters": {
              "id": 6446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:0:20"
            },
            "scope": 6529,
            "src": "1143:254:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6467,
              "nodeType": "Block",
              "src": "1556:29:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6465,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6433,
                    "src": "1573:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6464,
                  "id": 6466,
                  "nodeType": "Return",
                  "src": "1566:12:20"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 6468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1515:2:20"
            },
            "returnParameters": {
              "id": 6464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6463,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6468,
                  "src": "1541:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1540:15:20"
            },
            "scope": 6529,
            "src": "1502:83:20",
            "stateMutability": "view",
            "superFunction": 12553,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6475,
              "nodeType": "Block",
              "src": "1750:31:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6473,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6435,
                    "src": "1767:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6472,
                  "id": 6474,
                  "nodeType": "Return",
                  "src": "1760:14:20"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 6476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:2:20"
            },
            "returnParameters": {
              "id": 6472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6471,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6476,
                  "src": "1735:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1734:15:20"
            },
            "scope": 6529,
            "src": "1694:87:20",
            "stateMutability": "view",
            "superFunction": 12558,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6498,
              "nodeType": "Block",
              "src": "2008:161:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6485,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6478,
                            "src": "2034:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6484,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11308,
                          "src": "2026:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 6486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2026:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4574686965546f6b656e4d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 6487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2044:53:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5eb2feccc4b09e6e6e8263bc365bedd1703d1fc78b4c3f4e58ccabdbe5251fbb",
                          "typeString": "literal_string \"EthieTokenMetadata: URI query for nonexistent token\""
                        },
                        "value": "EthieTokenMetadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5eb2feccc4b09e6e6e8263bc365bedd1703d1fc78b4c3f4e58ccabdbe5251fbb",
                          "typeString": "literal_string \"EthieTokenMetadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 6483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38913,
                        38914
                      ],
                      "referencedDeclaration": 38914,
                      "src": "2018:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:80:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6489,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:80:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 6492,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6478,
                            "src": "2131:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUint256",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10010,
                          "src": "2131:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 6494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2131:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "2e6a736f6e",
                        "id": 6495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2154:7:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                          "typeString": "literal_string \".json\""
                        },
                        "value": ".json"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                          "typeString": "literal_string \".json\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6490,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6437,
                        "src": "2115:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 6491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "concat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9931,
                      "src": "2115:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 6496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2115:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 6482,
                  "id": 6497,
                  "nodeType": "Return",
                  "src": "2108:54:20"
                }
              ]
            },
            "documentation": "@dev Returns the URI for a given token ID. May return an empty string.\n     * Reverts if the token ID does not exist.",
            "id": 6499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6478,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6499,
                  "src": "1953:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1952:17:20"
            },
            "returnParameters": {
              "id": 6482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6481,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6499,
                  "src": "1993:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1992:15:20"
            },
            "scope": 6529,
            "src": "1935:234:20",
            "stateMutability": "view",
            "superFunction": 12565,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6509,
              "nodeType": "Block",
              "src": "2234:56:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e74726163742e6a736f6e",
                        "id": 6506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2267:15:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f3ddc30068640d4ff0fc2ae771c732088680d2e64da2ae0c2d4e1168326dad0",
                          "typeString": "literal_string \"contract.json\""
                        },
                        "value": "contract.json"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0f3ddc30068640d4ff0fc2ae771c732088680d2e64da2ae0c2d4e1168326dad0",
                          "typeString": "literal_string \"contract.json\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6504,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6437,
                        "src": "2251:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 6505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "concat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9910,
                      "src": "2251:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 6507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2251:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 6503,
                  "id": 6508,
                  "nodeType": "Return",
                  "src": "2244:39:20"
                }
              ]
            },
            "documentation": null,
            "id": 6510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2195:2:20"
            },
            "returnParameters": {
              "id": 6503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6502,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6510,
                  "src": "2219:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6501,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2219:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2218:15:20"
            },
            "scope": 6529,
            "src": "2175:115:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6519,
              "nodeType": "Block",
              "src": "2556:35:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6515,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6437,
                      "src": "2566:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6516,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6512,
                      "src": "2577:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2566:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6518,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:18:20"
                }
              ]
            },
            "documentation": "@dev Internal function to set the base URI for all token IDs. It is\nautomatically added as a prefix to the value returned in {tokenURI}.\n     * _Available since v2.5.0._",
            "id": 6520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBaseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6512,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 6520,
                  "src": "2524:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6511,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2523:23:20"
            },
            "returnParameters": {
              "id": 6514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2556:0:20"
            },
            "scope": 6529,
            "src": "2503:88:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6527,
              "nodeType": "Block",
              "src": "2880:32:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6525,
                    "name": "_baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6437,
                    "src": "2897:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6524,
                  "id": 6526,
                  "nodeType": "Return",
                  "src": "2890:15:20"
                }
              ]
            },
            "documentation": "@dev Returns the base URI set via {_setBaseURI}. This will be\nautomatically added as a preffix in {tokenURI} to each token's URI, when\nthey are non-empty.\n    * _Available since v2.5.0._",
            "id": 6528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:2:20"
            },
            "returnParameters": {
              "id": 6524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6523,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6528,
                  "src": "2865:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6522,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2865:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2864:15:20"
            },
            "scope": 6529,
            "src": "2823:89:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 6530,
        "src": "474:2441:20"
      }
    ],
    "src": "0:2916:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-05-30T18:42:21.923Z",
  "devdoc": {
    "details": "This is basically a clone of OpenZeppelin ERC721Metadata with small modifications, to generate tokenURI on the fly instead of using a mapping",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._"
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * Reverts if the token ID does not exist."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}